name: Message Service Build

on:
  push:
    branches:
      - trunk
    paths:
      - 'message/**'
    tags:
      - '*'
  pull_request:
    paths:
      - 'message/**'
  workflow_dispatch:
    inputs:
      simulate_tag:
        description: 'Simulate tag (e.g., v1.0.0-test)'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'
    - name: Build Message Service
      working-directory: ./message
      run: mvn clean install -Drevision=$(git rev-parse --short HEAD)
    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/trunk' || startsWith(github.ref, 'refs/tags/') || github.event.inputs.simulate_tag != ''
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Build and Push Docker image
      if: github.ref == 'refs/heads/trunk' || startsWith(github.ref, 'refs/tags/') || github.event.inputs.simulate_tag != ''
      working-directory: ./message
      run: |
        if [ -f target/restful-booker-platform-message-*-exec.jar ]; then
          if [[ "${{ github.event.inputs.simulate_tag }}" != "" ]]; then
            TAG="${{ github.event.inputs.simulate_tag }}"
          elif [[ "${{ github.ref }}" == "refs/heads/trunk" ]]; then
            TAG="latest"
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG="${{ github.ref_name }}"
          fi
          VERSION=$(ls target/restful-booker-platform-message-*-exec.jar | cut -d '-' -f 5 | cut -c1-11)
          docker build -t mwinteringham/restfulbookerplatform_message:$TAG .
          docker push mwinteringham/restfulbookerplatform_message:$TAG
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        else
          echo "Message JAR file not found"
          exit 1
        fi
        